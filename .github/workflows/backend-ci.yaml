name: Backend CI
on:
  push:
    branches: ["backend"]
    paths:
      - "backend/src/**"
      - "backend/Cargo.toml"
      - "backend/Cargo.lock"
      - "backend/Containerfile"
      - ".github/workflows/backend-ci.yaml"
env:
  CARGO_TERM_COLOR: always
defaults:
  run:
    working-directory: backend
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Enable cached dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "backend"
      - name: Check linting
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      - name: Check formatting
        run: cargo fmt --all --check
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Enable cached dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "backend"
      - name: Run tests
        run: cargo test --workspace --all-features --all-targets
  build-container-image:
    needs: [check, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Export lowercase repository name
        run: echo "LOWERCASE_REPOSITORY_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # uses a separate token because `GITHUB_TOKEN` has write permissions disabled
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: backend
          file: backend/Containerfile
          push: true
          tags: |
            ghcr.io/${{ env.LOWERCASE_REPOSITORY_NAME }}/durmetrics-backend:latest
            ghcr.io/${{ env.LOWERCASE_REPOSITORY_NAME }}/durmetrics-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
